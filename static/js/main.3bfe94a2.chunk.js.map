{"version":3,"sources":["Square.js","Board.js","Game.js","index.js"],"names":["Square","props","className","isWinning","onClick","value","renderSquare","i","winningSquares","includes","squares","element","n","elements","j","push","Board","numbers","board","calculateWinner","arr","pos","l","k","result","calculateWinner5x5","lines_diff","lines","length","a","b","c","d","e","x","map","index","console","log","player","line","Game","useState","Array","fill","history","setHistory","stepNumber","setstepNumber","xIsNext","setxIsNext","isDescending","setisDescending","istype10x10","setistype10x10","setnumbers","handleClick","locations10x10","locations20x20","currenthistory","slice","concat","location","status","current","winner","moves","step","move","desc","jumpTo","CheckDraw","reverse","temp","changType","ReactDOM","render","document","getElementById"],"mappings":"8JAYiBA,MAXjB,SAAgBC,GACZ,OACE,wBACEC,UAAW,WAAaD,EAAME,UAAY,kBAAoB,MAC9DC,QAASH,EAAMG,QAFjB,SAIGH,EAAMI,SCcf,SAASC,EAAaC,EAAEN,GACpB,OACE,cAAC,EAAD,CACEE,UAAWF,EAAMO,eAAeC,SAASF,GAEzCF,MAAOJ,EAAMS,QAAQH,GACrBH,QAAS,kBAAMH,EAAMG,QAAQG,KAFxB,UAAYA,GAQzB,SAASI,EAAQJ,EAAEK,EAAEX,GAEjB,IADA,IAAIY,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAAGE,IACrBD,EAASE,KAAKT,EAAaM,EAAEL,EAAEO,EAAEb,IAEnC,OAAOY,EAGIG,MAvCf,SAAef,GAIX,IAHA,IAAMW,EAAEX,EAAMgB,QAEVC,EAAM,GACDX,EAAI,EAAGA,EAAIK,EAAGL,IACnBW,EAAMH,KACN,qBAAKb,UAAU,YAAf,SACGS,EAAQJ,EAAEK,EAAEX,MAGnB,OACE,8BACE,qBAAKC,UAAU,YAAf,SACGgB,OCsHX,SAASC,EAAgBT,EAAQE,GAGjC,IAFA,IAAIQ,EAAI,GACJC,EAAI,GACCd,EAAI,EAAGA,GAAK,GAAIA,IACrBa,EAAIL,KAAK,MACTM,EAAIN,KAAKR,GAGZ,IAAK,IAAIe,EAAI,EAAGA,GAAIV,EAAE,EAAGU,IACxB,IAAK,IAAIC,EAAI,EAAGA,GAAKX,EAAE,EAAGW,IAAK,CAC7B,IAAK,IAAIhB,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIO,EAAI,EAAGA,EAAI,EAAGA,IACrBM,EAAM,EAAFb,EAAIO,GAAGJ,EAAQE,GAAGL,EAAEe,GAAGR,EAAES,GAC7BF,EAAM,EAAFd,EAAIO,GAAGF,GAAGL,EAAEe,GAAGR,EAAES,EAIzB,IAAIC,EAAQC,EAAmBL,EAAIC,EAAIC,EAAEC,EAAEX,GAC3C,GAAGY,EAED,OAAOA,EAKX,OAAO,KAGT,SAASC,EAAmBf,EAAQW,EAAIC,EAAEC,EAAEX,GAC1C,IAcGc,EAdGC,EAAQ,CACZ,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,GAAI,GAAI,GAAG,GAAG,IACf,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,EAAG,EAAG,GAAI,GAAI,IACf,CAAC,EAAG,EAAG,GAAI,GAAI,IACf,CAAC,EAAG,EAAG,GAAI,GAAI,IACf,CAAC,EAAG,EAAG,GAAI,GAAI,IACf,CAAC,EAAG,EAAG,GAAI,GAAI,IACf,CAAC,EAAG,EAAG,GAAI,GAAI,IACf,CAAC,EAAG,EAAG,GAAI,GAAI,KAIfD,EADI,KAAJd,EACa,CACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,GAAI,GAAI,GAAG,GAAG,IACf,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAGH,CACb,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAIlB,IAAK,IAAIL,EAAI,EAAGA,EAAIoB,EAAMC,OAAQrB,IAAK,CACrC,kBAAwBoB,EAAMpB,GAA9B,GAAOsB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KAAgBC,EAAhB,KAAmBC,EAAnB,KACA,GAAIvB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,IACjErB,EAAQmB,KAAOnB,EAAQsB,IAAMtB,EAAQmB,KAAOnB,EAAQuB,GAAI,CAE3D,IAAIC,EAAIR,EAAWnB,GAAG4B,KAAI,SAASC,GAKjC,OAJAC,QAAQC,IAAIF,GACZC,QAAQC,IAAI1B,GACZyB,QAAQC,IAAIhB,GACZe,QAAQC,IAAIf,GACLa,EAAQxB,EAAEU,EAAEC,KAGrB,MAAO,CAAEgB,OAAQ7B,EAAQmB,GAAIW,KAAON,IAGxC,OAAO,KAKMO,MAlOf,WACE,MAA8BC,mBAAS,CAAC,CACtChC,QAASiC,MAAM,GAAGC,KAAK,SADzB,mBAAOC,EAAP,KAAgBC,EAAhB,KAGA,EAAmCJ,mBAAS,GAA5C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA6BN,oBAAS,GAAtC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAuCR,oBAAS,GAAhD,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAqCV,oBAAS,GAA9C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAA6BZ,mBAAS,IAAtC,mBAAOzB,EAAP,KAAesC,EAAf,KAEA,SAASC,EAAYjD,GAEnB,IADA,IAAIkD,EAAe,GACVlD,EAAI,EAAGA,GAAK,GAAIA,IACvB,IAAK,IAAIO,EAAI,EAAGA,GAAK,GAAIA,IAEvB2C,EAAe1C,KAAK,CAACR,EAAEO,IAI3B,IADA,IAAI4C,EAAe,GACVnD,EAAI,EAAGA,GAAK,GAAIA,IACvB,IAAK,IAAIO,EAAI,EAAGA,GAAK,GAAIA,IAEvB4C,EAAe3C,KAAK,CAACR,EAAEO,IAI3B,IAAM6C,EAAiBd,EAAQe,MAAM,EAAGb,EAAa,GAE/CrC,EADUiD,EAAeA,EAAe/B,OAAS,GAC/BlB,QAAQkD,QAG5BzC,EAAgBT,EAAQO,IAAYP,EAAQH,KAIhDG,EAAQH,GAAK0C,EAAU,IAAM,IAC7BH,EAAWa,EAAeE,OAAO,CAAC,CAChCnD,QAASA,EACToD,SAAUT,EAAcI,EAAelD,GAAKmD,EAAenD,OAE7DyC,EAAcW,EAAe/B,QAC7BsB,GAAYD,IAkBZ,IAeIc,EAfEC,EAAUnB,EAAQE,GAClBkB,EAAS9C,EAAgB6C,EAAQtD,QAAQO,GACzCiD,EAAQrB,EAAQV,KAAI,SAACgC,EAAMC,GAC/B,IAAMC,EAAOD,EACX,mBAAqBA,EAAO,SAAWvB,EAAQuB,GAAMN,SACrD,mBACF,OACE,6BACE,wBAAQ1D,QAAS,kBAvBzB,SAAgB+D,GACdnB,EAAcmB,GACdjB,EAAYiB,EAAO,IAAO,GAqBGG,CAAOF,IAA9B,SACGA,IAASrB,EAAa,4BAAIsB,IAAYA,KAFlCD,MAsBb,OAZEL,EADEE,EACO,WAAaA,EAAO1B,OA2CnC,SAAmB7B,GACf,IAAK,IAAIH,EAAI,EAAGA,EAAIG,EAAQkB,OAAQrB,IAClC,GAAe,MAAZG,EAAQH,GAET,OAAO,EAGX,OAAO,EA9CDgE,CAAUP,EAAQtD,SACX,cAEA,iBAAmBuC,EAAU,IAAM,KAM9C,sBAAK/C,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SAEE,cAAC,EAAD,CACEM,eAAgByD,EAASA,EAAOzB,KAAO,GACvC9B,QAASsD,EAAQtD,QACjBN,QAAS,SAACG,GAAD,OAAOiD,EAAYjD,IAC5BU,QAASA,MASb,sBAAKf,UAAU,YAAf,UACE,8BAAM6D,IACN,6BAAKZ,EAAee,EAAQA,EAAMM,YAChC,yBAAQpE,QAAS,WA1DzBgD,GAAiBD,IA0DT,sBACYA,EAAe,aAAe,iBAG9C,mCAAK,yBAAQ/C,QAAS,kBA3D5B,WACE,IAAMqE,EAAOpB,EAAa,GAAG,GAC7BC,GAAgBD,GAChBE,EAAWkB,GAwDqBC,IAAvB,yBACYrB,EAAc,QAAU,kBChHjDsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.3bfe94a2.chunk.js","sourcesContent":["\r\nfunction Square(props) {\r\n    return (\r\n      <button\r\n        className={\"square \" + (props.isWinning ? \"square--winning\" : null)}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  export default Square","import Square from './Square.js'\r\n\r\nfunction Board(props) {\r\n    const n=props.numbers;\r\n\r\n    let board=[];\r\n    for (let i = 0; i < n; i++) {\r\n        board.push(\r\n        <div className=\"board-row\">\r\n          {element(i,n,props)}\r\n        </div>)\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {board}\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction renderSquare(i,props) {\r\n    return (\r\n      <Square\r\n        isWinning={props.winningSquares.includes(i)}\r\n        key={\"square \" + i}\r\n        value={props.squares[i]}\r\n        onClick={() => props.onClick(i)}\r\n      />\r\n    );\r\n}\r\n\r\n\r\nfunction element(i,n,props){\r\n    let elements=[];\r\n    for (let j = 0; j < n; j++) {\r\n      elements.push(renderSquare(n*i+j,props));\r\n    }\r\n    return elements\r\n }\r\n\r\nexport default Board\r\n","import Board from './Board';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nfunction Game(){\r\n  const [history, setHistory] = useState([{\r\n    squares: Array(9).fill(null),\r\n  }]);\r\n  const [stepNumber,setstepNumber] = useState(0);\r\n  const [xIsNext,setxIsNext] = useState(true);\r\n  const [isDescending,setisDescending] = useState(true);\r\n  const [istype10x10,setistype10x10] = useState(true);\r\n  const [numbers,setnumbers] = useState(10);\r\n\r\n  function handleClick(i) {\r\n    let locations10x10=[]\r\n    for (let i = 1; i <= 10; i++) {\r\n      for (let j = 1; j <= 10; j++)\r\n      {\r\n        locations10x10.push([i,j]);\r\n      }\r\n    }\r\n    let locations20x20=[]\r\n    for (let i = 1; i <= 20; i++) {\r\n      for (let j = 1; j <= 20; j++)\r\n      {\r\n        locations20x20.push([i,j]);\r\n      }\r\n    }\r\n\r\n    const currenthistory = history.slice(0, stepNumber + 1);\r\n    const current = currenthistory[currenthistory.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n\r\n    if (calculateWinner(squares,numbers) || squares[i]) {\r\n      return;\r\n    }\r\n   \r\n    squares[i] = xIsNext ? 'X' : 'O';\r\n    setHistory(currenthistory.concat([{\r\n      squares: squares,\r\n      location: istype10x10 ? locations10x10[i] : locations20x20[i],\r\n    }]));\r\n    setstepNumber(currenthistory.length);\r\n    setxIsNext(!xIsNext);\r\n  }\r\n\r\n  function jumpTo(step) {\r\n    setstepNumber(step);\r\n    setxIsNext((step % 2) === 0);\r\n  }\r\n\r\n  function sortHistory() {\r\n    setisDescending(!isDescending);\r\n  }\r\n\r\n  function changType(){\r\n    const temp = istype10x10? 20:10;\r\n    setistype10x10(!istype10x10);\r\n    setnumbers(temp);\r\n  }\r\n\r\n    const current = history[stepNumber];\r\n    const winner = calculateWinner(current.squares,numbers);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move \r\n      ? \"Go to move Step \" + move + \" ---- \" + history[move].location \r\n      : 'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>\r\n            {move === stepNumber ? <b>{desc}</b> : desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner.player;\r\n    }\r\n\r\n    else {\r\n      if (CheckDraw(current.squares)) {\r\n        status = 'A Draw Game';\r\n      } else {\r\n        status = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n      }\r\n      \r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          {istype10x10 ? \r\n          <Board\r\n            winningSquares={winner ? winner.line : []}\r\n            squares={current.squares}\r\n            onClick={(i) => handleClick(i)}\r\n            numbers={numbers}\r\n          /> : \r\n          <Board\r\n            winningSquares={winner ? winner.line : []}\r\n            squares={current.squares}\r\n            onClick={(i) => handleClick(i)}\r\n            numbers={numbers}\r\n          />}\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{isDescending ? moves : moves.reverse()}</ol>\r\n            <button onClick={() => sortHistory()}>\r\n              Sort by: {isDescending ? \"Descending\" : \"Asending\"}\r\n            </button>\r\n        </div>\r\n        <ol> <button onClick={() => changType()}>\r\n            Chang Type: {istype10x10 ? \"20X20\" : \"10X10\"}\r\n        </button></ol>\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction CheckDraw(squares){\r\n    for (let i = 0; i < squares.length; i++) {\r\n      if(squares[i]==null)\r\n      {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction calculateWinner(squares,n) {\r\nlet arr=[];\r\nlet pos=[];\r\nfor (var i = 1; i <= 25; i++) {\r\n    arr.push(null);\r\n    pos.push(i);\r\n }\r\n\r\n for (let l = 0; l <=n-5; l++) {\r\n  for (let k = 0; k <= n-5; k++) {\r\n    for (let i = 0; i < 5; i++) {\r\n      for (let j = 0; j < 5; j++) {\r\n        arr[i*5+j]=squares[n*(i+l)+j+k];\r\n        pos[i*5+j]=n*(i+l)+j+k;\r\n      } \r\n    }\r\n    \r\n    let result= calculateWinner5x5(arr,pos,l,k,n);\r\n    if(result)\r\n    {\r\n      return result;\r\n    }\r\n   }\r\n }\r\n \r\n  return null;\r\n}\r\n \r\nfunction calculateWinner5x5(squares,pos,l,k,n) {\r\n  const lines = [\r\n    [0, 1, 2, 3, 4],\r\n    [5, 6, 7, 8, 9],\r\n    [10, 11, 12,13,14],\r\n    [15, 16, 17, 18, 19],\r\n    [20, 21, 22, 23, 24],\r\n    [0, 5, 10, 15, 20],\r\n    [1, 6, 11, 16, 21],\r\n    [2, 7, 12, 17, 22],\r\n    [3, 8, 13, 18, 23],\r\n    [4, 9, 14, 19, 24],\r\n    [0, 6, 12, 18, 24],\r\n    [4, 8, 12, 16, 20],\r\n  ];\r\n var lines_diff;\r\nif (n===10) {\r\n    lines_diff = [\r\n    [0, 1, 2, 3, 4],\r\n    [10, 11, 12,13,14],\r\n    [20, 21, 22, 23, 24],\r\n    [30, 31, 32, 33, 34],\r\n    [40, 41, 42, 43, 44],\r\n    [0, 10, 20, 30, 40],\r\n    [1, 11, 21, 31, 41],\r\n    [2, 12, 22, 32, 42],\r\n    [3, 13, 23, 33, 43],\r\n    [4, 14, 24, 34, 44],\r\n    [0, 11, 22, 33, 44],\r\n    [4, 13, 22, 31, 40],\r\n  ];\r\n} else {\r\n    lines_diff = [\r\n    [0, 1, 2, 3, 4],\r\n    [20, 21, 22, 23, 24],\r\n    [40, 41, 42, 43, 44],\r\n    [60, 61, 62, 63, 64],\r\n    [80, 81, 82, 83, 84],\r\n    [0, 20, 40, 60, 80],\r\n    [1, 21, 41, 61, 81],\r\n    [2, 22, 42, 62, 82],\r\n    [3, 23, 43, 63, 83],\r\n    [4, 24, 44, 64, 84],\r\n    [0, 21, 42, 63, 84],\r\n    [4, 23, 42, 61, 80],\r\n  ];\r\n}\r\n  \r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c, d, e] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] \r\n      && squares[a] === squares[d] && squares[a] === squares[e]) {\r\n\r\n      let x = lines_diff[i].map(function(index) {\r\n        console.log(index); \r\n        console.log(n);\r\n        console.log(l);\r\n        console.log(k);\r\n        return index + n*l+k ;\r\n      })\r\n     \r\n      return { player: squares[a], line:  x };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n\r\nexport default Game","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}